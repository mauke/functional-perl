lib/Chj/IO/Tempdir.pm	Using overload.pm without a boolean overload or fallback at line 36, column 1. When using overload.pm to define overloads for an object class, always define an overload on "bool" explicitly and set the fallback option. This prevents objects from autogenerating a potentially surprising boolean overload, and causes operators for which overloads can't be autogenerated to act on the object as they normally would.

lib/Chj/ruse.pm	each() called at line 137, column 35. The each function may cause undefined behavior when operating on the hash while iterating. Use a foreach loop over the hash's keys or values instead.

lib/Chj/singlequote.pm	wantarray() called at line 117, column 9. Context-sensitive functions lead to unexpected errors or vulnerabilities. Functions should explicitly return either a list or a scalar value.

lib/FP/Failure.pm	Using overload.pm without a boolean overload or fallback at line 191, column 5. When using overload.pm to define overloads for an object class, always define an overload on "bool" explicitly and set the fallback option. This prevents objects from autogenerating a potentially surprising boolean overload, and causes operators for which overloads can't be autogenerated to act on the object as they normally would.

lib/FP/JSON.pm	Used module JSON at line 69, column 1. JSON.pm is old and full of slow logic. Use JSON::MaybeXS instead, it is a drop-in replacement in most cases.

lib/FP/Lazy.pm	Using overload.pm without a boolean overload or fallback at line 550, column 5. When using overload.pm to define overloads for an object class, always define an overload on "bool" explicitly and set the fallback option. This prevents objects from autogenerating a potentially surprising boolean overload, and causes operators for which overloads can't be autogenerated to act on the object as they normally would.
lib/FP/Lazy.pm	Using overload.pm without a boolean overload or fallback at line 737, column 5. When using overload.pm to define overloads for an object class, always define an overload on "bool" explicitly and set the fallback option. This prevents objects from autogenerating a potentially surprising boolean overload, and causes operators for which overloads can't be autogenerated to act on the object as they normally would.

lib/FP/Trie.pm	Using overload.pm without a boolean overload or fallback at line 99, column 5. When using overload.pm to define overloads for an object class, always define an overload on "bool" explicitly and set the fallback option. This prevents objects from autogenerating a potentially surprising boolean overload, and causes operators for which overloads can't be autogenerated to act on the object as they normally would.

lib/PXML/Preserialize.pm	Using overload.pm without a boolean overload or fallback at line 162, column 5. When using overload.pm to define overloads for an object class, always define an overload on "bool" explicitly and set the fallback option. This prevents objects from autogenerating a potentially surprising boolean overload, and causes operators for which overloads can't be autogenerated to act on the object as they normally would.

